# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.

import os
import pathlib
import pandas as pd
from snakemake.remote.S3 import RemoteProvider as S3RemoteProvider
from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
from snakemake.utils import validate
import yaml

S3 = S3RemoteProvider()

sys.path.insert(0, ".")
from lib import resource_calculator as rc
from lib import target_construction as tc
from lib import config_tracking_files as ctf

shell.executable("/bin/bash")
shell.prefix("set -euo pipefail; ")


configfile: "config/config.yaml"


validate(config, "../schema/global_config_schema.yaml")

with open("config/config_resources.yaml", "r") as f:
    config_resources = yaml.safe_load(f)

validate(config_resources, "../schema/resources_config_schema.yaml")

tempDir = "temp"
manifest_experiment = config["experiment-manifest"]
manifest_reference = config["reference-manifest"]
manifest_comparisons = config["comparisons-manifest"]
manifest_experiment = pd.read_csv(manifest_experiment, sep="\t").set_index(
    "experimental_dataset", drop=False
)
manifest_reference = pd.read_csv(manifest_reference, sep="\t").set_index(
    "reference_dataset", drop=False
)
manifest_comparisons = pd.read_csv(manifest_comparisons, sep="\t")
reference_build = config["genome-build"]
sv_reference_filter_type = (
    "within-svdb"
    if config["sv-settings"]["merge-reference-before-comparison"]
    else "filtered-to-region"
)
sv_experimental_filter_type = (
    "within-svdb"
    if config["sv-settings"]["merge-experimental-before-comparison"]
    else "filtered-to-region"
)


validate(manifest_experiment, "../schema/experiment_manifest_schema.yaml")
validate(manifest_reference, "../schema/reference_manifest_schema.yaml")
validate(manifest_comparisons, "../schema/comparisons_manifest_schema.yaml")

ctf.update_analysis_tracking_files(config, "results")

TARGETS = (tc.construct_targets(config, manifest_experiment, manifest_comparisons),)


rule all:
    input:
        TARGETS,


include: "rules/acquire_data.smk"
include: "rules/happy.smk"
include: "rules/reference_data.smk"
include: "rules/reports.smk"
include: "rules/svanalyzer.smk"
include: "rules/svdb.smk"
include: "rules/truvari.smk"
include: "rules/vcfeval.smk"
